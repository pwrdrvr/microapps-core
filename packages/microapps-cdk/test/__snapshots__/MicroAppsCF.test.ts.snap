// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MicroAppsCF works with no params 1`] = `
Object {
  "Resources": Object {
    "bucketapps06013E35": Object {
      "DeletionPolicy": "Retain",
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "bucketappsPolicy931B22E4": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "bucketapps06013E35",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Principal": Object {
                "CanonicalUser": Object {
                  "Fn::GetAtt": Array [
                    "oai7A77E975",
                    "S3CanonicalUserId",
                  ],
                },
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "bucketapps06013E35",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "constructapigwyoriginpolicystack77776C6F": Object {
      "Properties": Object {
        "OriginRequestPolicyConfig": Object {
          "CookiesConfig": Object {
            "CookieBehavior": "all",
          },
          "HeadersConfig": Object {
            "HeaderBehavior": "whitelist",
            "Headers": Array [
              "user-agent",
              "referer",
            ],
          },
          "Name": "stackconstructapigwyoriginpolicystack60399495",
          "QueryStringsConfig": Object {
            "QueryStringBehavior": "all",
          },
        },
      },
      "Type": "AWS::CloudFront::OriginRequestPolicy",
    },
    "constructcftBE9A3354": Object {
      "Properties": Object {
        "DistributionConfig": Object {
          "CacheBehaviors": Array [
            Object {
              "AllowedMethods": Array [
                "GET",
                "HEAD",
                "OPTIONS",
              ],
              "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
              "Compress": true,
              "OriginRequestPolicyId": "88a5eaf4-2fd4-4709-b370-b4c650ea3fcf",
              "PathPattern": "/*/*/*.*",
              "TargetOriginId": "stackconstructcftOrigin2BE69FFBB",
              "ViewerProtocolPolicy": "redirect-to-https",
            },
            Object {
              "AllowedMethods": Array [
                "GET",
                "HEAD",
                "OPTIONS",
                "PUT",
                "PATCH",
                "POST",
                "DELETE",
              ],
              "CachePolicyId": "4135ea2d-6df8-44a3-9df3-4b5a84be39ad",
              "Compress": true,
              "OriginRequestPolicyId": Object {
                "Ref": "constructapigwyoriginpolicystack77776C6F",
              },
              "PathPattern": "/*",
              "TargetOriginId": "stackconstructcftOrigin1D000029C",
              "ViewerProtocolPolicy": "redirect-to-https",
            },
          ],
          "DefaultCacheBehavior": Object {
            "AllowedMethods": Array [
              "GET",
              "HEAD",
              "OPTIONS",
              "PUT",
              "PATCH",
              "POST",
              "DELETE",
            ],
            "CachePolicyId": "4135ea2d-6df8-44a3-9df3-4b5a84be39ad",
            "Compress": true,
            "OriginRequestPolicyId": Object {
              "Ref": "constructapigwyoriginpolicystack77776C6F",
            },
            "TargetOriginId": "stackconstructcftOrigin1D000029C",
            "ViewerProtocolPolicy": "redirect-to-https",
          },
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Origins": Array [
            Object {
              "CustomOriginConfig": Object {
                "OriginProtocolPolicy": "https-only",
                "OriginSSLProtocols": Array [
                  "TLSv1.2",
                ],
              },
              "DomainName": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Ref": "httpapi04200D5F",
                    },
                    ".execute-api.",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ".amazonaws.com",
                  ],
                ],
              },
              "Id": "stackconstructcftOrigin1D000029C",
            },
            Object {
              "DomainName": Object {
                "Fn::GetAtt": Array [
                  "bucketapps06013E35",
                  "RegionalDomainName",
                ],
              },
              "Id": "stackconstructcftOrigin2BE69FFBB",
              "S3OriginConfig": Object {
                "OriginAccessIdentity": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "origin-access-identity/cloudfront/",
                      Object {
                        "Ref": "oai7A77E975",
                      },
                    ],
                  ],
                },
              },
            },
          ],
          "PriceClass": "PriceClass_100",
        },
      },
      "Type": "AWS::CloudFront::Distribution",
    },
    "httpapi04200D5F": Object {
      "Properties": Object {
        "Name": "some-api",
        "ProtocolType": "HTTP",
      },
      "Type": "AWS::ApiGatewayV2::Api",
    },
    "httpapiDefaultStageEEE9F4E2": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "httpapi04200D5F",
        },
        "AutoDeploy": true,
        "StageName": "$default",
      },
      "Type": "AWS::ApiGatewayV2::Stage",
    },
    "oai7A77E975": Object {
      "Properties": Object {
        "CloudFrontOriginAccessIdentityConfig": Object {
          "Comment": "Allows CloudFront to reach the bucket",
        },
      },
      "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
    },
  },
}
`;

exports[`MicroAppsCF works with params 1`] = `
Object {
  "Mappings": Object {
    "AWSCloudFrontPartitionHostedZoneIdMap": Object {
      "aws": Object {
        "zoneId": "Z2FDTNDATAQYW2",
      },
      "aws-cn": Object {
        "zoneId": "Z3RFFRIM2A3IF5",
      },
    },
  },
  "Resources": Object {
    "bucketapps06013E35": Object {
      "DeletionPolicy": "Retain",
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "bucketappsPolicy931B22E4": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "bucketapps06013E35",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Principal": Object {
                "CanonicalUser": Object {
                  "Fn::GetAtt": Array [
                    "oai7A77E975",
                    "S3CanonicalUserId",
                  ],
                },
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "bucketapps06013E35",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "cert56CA94EB": Object {
      "Properties": Object {
        "DomainName": "*.test.pwrdrvr.com",
        "DomainValidationOptions": Array [
          Object {
            "DomainName": "*.test.pwrdrvr.com",
            "ValidationDomain": "pwrdrvr.com",
          },
        ],
        "ValidationMethod": "EMAIL",
      },
      "Type": "AWS::CertificateManager::Certificate",
    },
    "constructcftBE9A3354": Object {
      "Properties": Object {
        "DistributionConfig": Object {
          "Aliases": Array [
            "some.test.pwrdrvr.com",
          ],
          "CacheBehaviors": Array [
            Object {
              "AllowedMethods": Array [
                "GET",
                "HEAD",
                "OPTIONS",
              ],
              "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
              "Compress": true,
              "OriginRequestPolicyId": "88a5eaf4-2fd4-4709-b370-b4c650ea3fcf",
              "PathPattern": "/*/*/*.*",
              "TargetOriginId": "stackconstructcftOrigin2BE69FFBB",
              "ViewerProtocolPolicy": "redirect-to-https",
            },
            Object {
              "AllowedMethods": Array [
                "GET",
                "HEAD",
                "OPTIONS",
                "PUT",
                "PATCH",
                "POST",
                "DELETE",
              ],
              "CachePolicyId": "4135ea2d-6df8-44a3-9df3-4b5a84be39ad",
              "Compress": true,
              "OriginRequestPolicyId": "216adef6-5c7f-47e4-b989-5492eafa07d3",
              "PathPattern": "/*",
              "TargetOriginId": "stackconstructcftOrigin1D000029C",
              "ViewerProtocolPolicy": "redirect-to-https",
            },
          ],
          "Comment": "some.test.pwrdrvr.com",
          "DefaultCacheBehavior": Object {
            "AllowedMethods": Array [
              "GET",
              "HEAD",
              "OPTIONS",
              "PUT",
              "PATCH",
              "POST",
              "DELETE",
            ],
            "CachePolicyId": "4135ea2d-6df8-44a3-9df3-4b5a84be39ad",
            "Compress": true,
            "OriginRequestPolicyId": "216adef6-5c7f-47e4-b989-5492eafa07d3",
            "TargetOriginId": "stackconstructcftOrigin1D000029C",
            "ViewerProtocolPolicy": "redirect-to-https",
          },
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Origins": Array [
            Object {
              "CustomOriginConfig": Object {
                "OriginProtocolPolicy": "https-only",
                "OriginSSLProtocols": Array [
                  "TLSv1.2",
                ],
              },
              "DomainName": "some-origin.test.pwrdvr.com",
              "Id": "stackconstructcftOrigin1D000029C",
            },
            Object {
              "DomainName": Object {
                "Fn::GetAtt": Array [
                  "bucketapps06013E35",
                  "RegionalDomainName",
                ],
              },
              "Id": "stackconstructcftOrigin2BE69FFBB",
              "S3OriginConfig": Object {
                "OriginAccessIdentity": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "origin-access-identity/cloudfront/",
                      Object {
                        "Ref": "oai7A77E975",
                      },
                    ],
                  ],
                },
              },
            },
          ],
          "PriceClass": "PriceClass_100",
          "ViewerCertificate": Object {
            "AcmCertificateArn": Object {
              "Ref": "cert56CA94EB",
            },
            "MinimumProtocolVersion": "TLSv1.2_2019",
            "SslSupportMethod": "sni-only",
          },
        },
      },
      "Type": "AWS::CloudFront::Distribution",
    },
    "constructedgearecordF28A0EBD": Object {
      "Properties": Object {
        "AliasTarget": Object {
          "DNSName": Object {
            "Fn::GetAtt": Array [
              "constructcftBE9A3354",
              "DomainName",
            ],
          },
          "HostedZoneId": Object {
            "Fn::FindInMap": Array [
              "AWSCloudFrontPartitionHostedZoneIdMap",
              Object {
                "Ref": "AWS::Partition",
              },
              "zoneId",
            ],
          },
        },
        "HostedZoneId": Object {
          "Ref": "zoneEB40FF1E",
        },
        "Name": "some.test.pwrdrvr.com.",
        "Type": "A",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "httpapi04200D5F": Object {
      "Properties": Object {
        "Name": "some-api",
        "ProtocolType": "HTTP",
      },
      "Type": "AWS::ApiGatewayV2::Api",
    },
    "httpapiDefaultStageEEE9F4E2": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "httpapi04200D5F",
        },
        "AutoDeploy": true,
        "StageName": "$default",
      },
      "Type": "AWS::ApiGatewayV2::Stage",
    },
    "oai7A77E975": Object {
      "Properties": Object {
        "CloudFrontOriginAccessIdentityConfig": Object {
          "Comment": "Allows CloudFront to reach the bucket",
        },
      },
      "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
    },
    "zoneEB40FF1E": Object {
      "Properties": Object {
        "Name": "test.pwrdrvr.com.",
      },
      "Type": "AWS::Route53::HostedZone",
    },
  },
}
`;

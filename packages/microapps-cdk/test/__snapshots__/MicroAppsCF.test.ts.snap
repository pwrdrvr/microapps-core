// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MicroAppsCF works with no params 1`] = `
Object {
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": Object {
      "DependsOn": Array [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-us-east-1",
          },
          "S3Key": "558dc75fbdc793c8e2f64f85d2d7ed2cb820c727ec7e9b08666ad1af0103992e.zip",
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": Array [
          Object {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "bucketapps06013E35": Object {
      "DeletionPolicy": "Retain",
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "bucketappsPolicy931B22E4": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "bucketapps06013E35",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Principal": Object {
                "CanonicalUser": Object {
                  "Fn::GetAtt": Array [
                    "oai7A77E975",
                    "S3CanonicalUserId",
                  ],
                },
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "bucketapps06013E35",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "constructapigwyoriginpolicystack77776C6F": Object {
      "Properties": Object {
        "OriginRequestPolicyConfig": Object {
          "CookiesConfig": Object {
            "CookieBehavior": "all",
          },
          "HeadersConfig": Object {
            "HeaderBehavior": "allViewer",
          },
          "Name": "stackconstructapigwyoriginpolicystack60399495",
          "QueryStringsConfig": Object {
            "QueryStringBehavior": "all",
          },
        },
      },
      "Type": "AWS::CloudFront::OriginRequestPolicy",
    },
    "constructcftBE9A3354": Object {
      "Properties": Object {
        "DistributionConfig": Object {
          "CacheBehaviors": Array [
            Object {
              "AllowedMethods": Array [
                "GET",
                "HEAD",
                "OPTIONS",
                "PUT",
                "PATCH",
                "POST",
                "DELETE",
              ],
              "CachePolicyId": "4135ea2d-6df8-44a3-9df3-4b5a84be39ad",
              "Compress": true,
              "LambdaFunctionAssociations": Array [
                Object {
                  "EventType": "origin-request",
                  "IncludeBody": true,
                  "LambdaFunctionARN": Object {
                    "Ref": "constructedgetoapigwyfuncFnCurrentVersionDCFB227223c63313c5fc3052ab6d9d3061c12195",
                  },
                },
              ],
              "OriginRequestPolicyId": Object {
                "Ref": "constructapigwyoriginpolicystack77776C6F",
              },
              "PathPattern": "/*/*/api/*",
              "TargetOriginId": "stackconstructcftOrigin1D000029C",
              "ViewerProtocolPolicy": "redirect-to-https",
            },
            Object {
              "AllowedMethods": Array [
                "GET",
                "HEAD",
                "OPTIONS",
              ],
              "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
              "Compress": true,
              "OriginRequestPolicyId": "88a5eaf4-2fd4-4709-b370-b4c650ea3fcf",
              "PathPattern": "/*/*/*.*",
              "TargetOriginId": "stackconstructcftOrigin2BE69FFBB",
              "ViewerProtocolPolicy": "redirect-to-https",
            },
            Object {
              "AllowedMethods": Array [
                "GET",
                "HEAD",
                "OPTIONS",
                "PUT",
                "PATCH",
                "POST",
                "DELETE",
              ],
              "CachePolicyId": "4135ea2d-6df8-44a3-9df3-4b5a84be39ad",
              "Compress": true,
              "LambdaFunctionAssociations": Array [
                Object {
                  "EventType": "origin-request",
                  "IncludeBody": true,
                  "LambdaFunctionARN": Object {
                    "Ref": "constructedgetoapigwyfuncFnCurrentVersionDCFB227223c63313c5fc3052ab6d9d3061c12195",
                  },
                },
              ],
              "OriginRequestPolicyId": Object {
                "Ref": "constructapigwyoriginpolicystack77776C6F",
              },
              "PathPattern": "/*",
              "TargetOriginId": "stackconstructcftOrigin1D000029C",
              "ViewerProtocolPolicy": "redirect-to-https",
            },
          ],
          "DefaultCacheBehavior": Object {
            "AllowedMethods": Array [
              "GET",
              "HEAD",
              "OPTIONS",
              "PUT",
              "PATCH",
              "POST",
              "DELETE",
            ],
            "CachePolicyId": "4135ea2d-6df8-44a3-9df3-4b5a84be39ad",
            "Compress": true,
            "LambdaFunctionAssociations": Array [
              Object {
                "EventType": "origin-request",
                "IncludeBody": true,
                "LambdaFunctionARN": Object {
                  "Ref": "constructedgetoapigwyfuncFnCurrentVersionDCFB227223c63313c5fc3052ab6d9d3061c12195",
                },
              },
            ],
            "OriginRequestPolicyId": Object {
              "Ref": "constructapigwyoriginpolicystack77776C6F",
            },
            "TargetOriginId": "stackconstructcftOrigin1D000029C",
            "ViewerProtocolPolicy": "redirect-to-https",
          },
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Origins": Array [
            Object {
              "CustomOriginConfig": Object {
                "OriginProtocolPolicy": "https-only",
                "OriginSSLProtocols": Array [
                  "TLSv1.2",
                ],
              },
              "DomainName": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Ref": "httpapi04200D5F",
                    },
                    ".execute-api.",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ".amazonaws.com",
                  ],
                ],
              },
              "Id": "stackconstructcftOrigin1D000029C",
            },
            Object {
              "DomainName": Object {
                "Fn::GetAtt": Array [
                  "bucketapps06013E35",
                  "RegionalDomainName",
                ],
              },
              "Id": "stackconstructcftOrigin2BE69FFBB",
              "S3OriginConfig": Object {
                "OriginAccessIdentity": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "origin-access-identity/cloudfront/",
                      Object {
                        "Ref": "oai7A77E975",
                      },
                    ],
                  ],
                },
              },
            },
          ],
          "PriceClass": "PriceClass_100",
        },
      },
      "Type": "AWS::CloudFront::Distribution",
    },
    "constructedgetoapigwyfuncFn90ED4CA5": Object {
      "DependsOn": Array [
        "constructedgetoapigwyfuncFnServiceRoleDefaultPolicy7195E4CE",
        "constructedgetoapigwyfuncFnServiceRoleE77C7C85",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-us-east-1",
          },
          "S3Key": "fd5f3a792967cc288a698ac19c30cb4868de847a7e2f4c974face0e83c05cc74.zip",
        },
        "Handler": "index.handler",
        "MemorySize": 1769,
        "Role": Object {
          "Fn::GetAtt": Array [
            "constructedgetoapigwyfuncFnServiceRoleE77C7C85",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 5,
      },
      "Type": "AWS::Lambda::Function",
    },
    "constructedgetoapigwyfuncFnCurrentVersionDCFB227223c63313c5fc3052ab6d9d3061c12195": Object {
      "Properties": Object {
        "FunctionName": Object {
          "Ref": "constructedgetoapigwyfuncFn90ED4CA5",
        },
      },
      "Type": "AWS::Lambda::Version",
    },
    "constructedgetoapigwyfuncFnLogRetentionA473EEDC": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "constructedgetoapigwyfuncFn90ED4CA5",
              },
            ],
          ],
        },
        "RetentionInDays": 30,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "constructedgetoapigwyfuncFnServiceRoleDefaultPolicy7195E4CE": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "execute-api:Invoke",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:execute-api:*:",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":*/*/*/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "constructedgetoapigwyfuncFnServiceRoleDefaultPolicy7195E4CE",
        "Roles": Array [
          Object {
            "Ref": "constructedgetoapigwyfuncFnServiceRoleE77C7C85",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "constructedgetoapigwyfuncFnServiceRoleE77C7C85": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "edgelambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "httpapi04200D5F": Object {
      "Properties": Object {
        "Name": "some-api",
        "ProtocolType": "HTTP",
      },
      "Type": "AWS::ApiGatewayV2::Api",
    },
    "httpapiDefaultStageEEE9F4E2": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "httpapi04200D5F",
        },
        "AutoDeploy": true,
        "StageName": "$default",
      },
      "Type": "AWS::ApiGatewayV2::Stage",
    },
    "oai7A77E975": Object {
      "Properties": Object {
        "CloudFrontOriginAccessIdentityConfig": Object {
          "Comment": "Allows CloudFront to reach the bucket",
        },
      },
      "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

exports[`MicroAppsCF works with params 1`] = `
Object {
  "Mappings": Object {
    "AWSCloudFrontPartitionHostedZoneIdMap": Object {
      "aws": Object {
        "zoneId": "Z2FDTNDATAQYW2",
      },
      "aws-cn": Object {
        "zoneId": "Z3RFFRIM2A3IF5",
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": Object {
      "DependsOn": Array [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-us-east-1",
          },
          "S3Key": "558dc75fbdc793c8e2f64f85d2d7ed2cb820c727ec7e9b08666ad1af0103992e.zip",
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": Array [
          Object {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "bucketapps06013E35": Object {
      "DeletionPolicy": "Retain",
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "bucketappsPolicy931B22E4": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "bucketapps06013E35",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Principal": Object {
                "CanonicalUser": Object {
                  "Fn::GetAtt": Array [
                    "oai7A77E975",
                    "S3CanonicalUserId",
                  ],
                },
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "bucketapps06013E35",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "cert56CA94EB": Object {
      "Properties": Object {
        "DomainName": "*.test.pwrdrvr.com",
        "DomainValidationOptions": Array [
          Object {
            "DomainName": "*.test.pwrdrvr.com",
            "ValidationDomain": "pwrdrvr.com",
          },
        ],
        "ValidationMethod": "EMAIL",
      },
      "Type": "AWS::CertificateManager::Certificate",
    },
    "constructcftBE9A3354": Object {
      "Properties": Object {
        "DistributionConfig": Object {
          "Aliases": Array [
            "some.test.pwrdrvr.com",
          ],
          "CacheBehaviors": Array [
            Object {
              "AllowedMethods": Array [
                "GET",
                "HEAD",
                "OPTIONS",
                "PUT",
                "PATCH",
                "POST",
                "DELETE",
              ],
              "CachePolicyId": "4135ea2d-6df8-44a3-9df3-4b5a84be39ad",
              "Compress": true,
              "LambdaFunctionAssociations": Array [
                Object {
                  "EventType": "origin-request",
                  "IncludeBody": true,
                  "LambdaFunctionARN": Object {
                    "Ref": "constructedgetoapigwyfuncFnCurrentVersionDCFB227223c63313c5fc3052ab6d9d3061c12195",
                  },
                },
              ],
              "OriginRequestPolicyId": "216adef6-5c7f-47e4-b989-5492eafa07d3",
              "PathPattern": "/*/*/api/*",
              "TargetOriginId": "stackconstructcftOrigin1D000029C",
              "ViewerProtocolPolicy": "redirect-to-https",
            },
            Object {
              "AllowedMethods": Array [
                "GET",
                "HEAD",
                "OPTIONS",
              ],
              "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
              "Compress": true,
              "OriginRequestPolicyId": "88a5eaf4-2fd4-4709-b370-b4c650ea3fcf",
              "PathPattern": "/*/*/*.*",
              "TargetOriginId": "stackconstructcftOrigin2BE69FFBB",
              "ViewerProtocolPolicy": "redirect-to-https",
            },
            Object {
              "AllowedMethods": Array [
                "GET",
                "HEAD",
                "OPTIONS",
                "PUT",
                "PATCH",
                "POST",
                "DELETE",
              ],
              "CachePolicyId": "4135ea2d-6df8-44a3-9df3-4b5a84be39ad",
              "Compress": true,
              "LambdaFunctionAssociations": Array [
                Object {
                  "EventType": "origin-request",
                  "IncludeBody": true,
                  "LambdaFunctionARN": Object {
                    "Ref": "constructedgetoapigwyfuncFnCurrentVersionDCFB227223c63313c5fc3052ab6d9d3061c12195",
                  },
                },
              ],
              "OriginRequestPolicyId": "216adef6-5c7f-47e4-b989-5492eafa07d3",
              "PathPattern": "/*",
              "TargetOriginId": "stackconstructcftOrigin1D000029C",
              "ViewerProtocolPolicy": "redirect-to-https",
            },
          ],
          "Comment": "some.test.pwrdrvr.com",
          "DefaultCacheBehavior": Object {
            "AllowedMethods": Array [
              "GET",
              "HEAD",
              "OPTIONS",
              "PUT",
              "PATCH",
              "POST",
              "DELETE",
            ],
            "CachePolicyId": "4135ea2d-6df8-44a3-9df3-4b5a84be39ad",
            "Compress": true,
            "LambdaFunctionAssociations": Array [
              Object {
                "EventType": "origin-request",
                "IncludeBody": true,
                "LambdaFunctionARN": Object {
                  "Ref": "constructedgetoapigwyfuncFnCurrentVersionDCFB227223c63313c5fc3052ab6d9d3061c12195",
                },
              },
            ],
            "OriginRequestPolicyId": "216adef6-5c7f-47e4-b989-5492eafa07d3",
            "TargetOriginId": "stackconstructcftOrigin1D000029C",
            "ViewerProtocolPolicy": "redirect-to-https",
          },
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Origins": Array [
            Object {
              "CustomOriginConfig": Object {
                "OriginProtocolPolicy": "https-only",
                "OriginSSLProtocols": Array [
                  "TLSv1.2",
                ],
              },
              "DomainName": "some-origin.test.pwrdvr.com",
              "Id": "stackconstructcftOrigin1D000029C",
            },
            Object {
              "DomainName": Object {
                "Fn::GetAtt": Array [
                  "bucketapps06013E35",
                  "RegionalDomainName",
                ],
              },
              "Id": "stackconstructcftOrigin2BE69FFBB",
              "S3OriginConfig": Object {
                "OriginAccessIdentity": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "origin-access-identity/cloudfront/",
                      Object {
                        "Ref": "oai7A77E975",
                      },
                    ],
                  ],
                },
              },
            },
          ],
          "PriceClass": "PriceClass_100",
          "ViewerCertificate": Object {
            "AcmCertificateArn": Object {
              "Ref": "cert56CA94EB",
            },
            "MinimumProtocolVersion": "TLSv1.2_2021",
            "SslSupportMethod": "sni-only",
          },
        },
      },
      "Type": "AWS::CloudFront::Distribution",
    },
    "constructedgearecordF28A0EBD": Object {
      "Properties": Object {
        "AliasTarget": Object {
          "DNSName": Object {
            "Fn::GetAtt": Array [
              "constructcftBE9A3354",
              "DomainName",
            ],
          },
          "HostedZoneId": Object {
            "Fn::FindInMap": Array [
              "AWSCloudFrontPartitionHostedZoneIdMap",
              Object {
                "Ref": "AWS::Partition",
              },
              "zoneId",
            ],
          },
        },
        "HostedZoneId": Object {
          "Ref": "zoneEB40FF1E",
        },
        "Name": "some.test.pwrdrvr.com.",
        "Type": "A",
      },
      "Type": "AWS::Route53::RecordSet",
    },
    "constructedgetoapigwyfuncFn90ED4CA5": Object {
      "DependsOn": Array [
        "constructedgetoapigwyfuncFnServiceRoleDefaultPolicy7195E4CE",
        "constructedgetoapigwyfuncFnServiceRoleE77C7C85",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-us-east-1",
          },
          "S3Key": "fd5f3a792967cc288a698ac19c30cb4868de847a7e2f4c974face0e83c05cc74.zip",
        },
        "Handler": "index.handler",
        "MemorySize": 1769,
        "Role": Object {
          "Fn::GetAtt": Array [
            "constructedgetoapigwyfuncFnServiceRoleE77C7C85",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 5,
      },
      "Type": "AWS::Lambda::Function",
    },
    "constructedgetoapigwyfuncFnCurrentVersionDCFB227223c63313c5fc3052ab6d9d3061c12195": Object {
      "Properties": Object {
        "FunctionName": Object {
          "Ref": "constructedgetoapigwyfuncFn90ED4CA5",
        },
      },
      "Type": "AWS::Lambda::Version",
    },
    "constructedgetoapigwyfuncFnLogRetentionA473EEDC": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "constructedgetoapigwyfuncFn90ED4CA5",
              },
            ],
          ],
        },
        "RetentionInDays": 30,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "constructedgetoapigwyfuncFnServiceRoleDefaultPolicy7195E4CE": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "execute-api:Invoke",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:execute-api:*:",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":*/*/*/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "constructedgetoapigwyfuncFnServiceRoleDefaultPolicy7195E4CE",
        "Roles": Array [
          Object {
            "Ref": "constructedgetoapigwyfuncFnServiceRoleE77C7C85",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "constructedgetoapigwyfuncFnServiceRoleE77C7C85": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "edgelambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "httpapi04200D5F": Object {
      "Properties": Object {
        "Name": "some-api",
        "ProtocolType": "HTTP",
      },
      "Type": "AWS::ApiGatewayV2::Api",
    },
    "httpapiDefaultStageEEE9F4E2": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "httpapi04200D5F",
        },
        "AutoDeploy": true,
        "StageName": "$default",
      },
      "Type": "AWS::ApiGatewayV2::Stage",
    },
    "oai7A77E975": Object {
      "Properties": Object {
        "CloudFrontOriginAccessIdentityConfig": Object {
          "Comment": "Allows CloudFront to reach the bucket",
        },
      },
      "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
    },
    "zoneEB40FF1E": Object {
      "Properties": Object {
        "Name": "test.pwrdrvr.com.",
      },
      "Type": "AWS::Route53::HostedZone",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;

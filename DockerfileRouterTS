FROM node:15-slim as base

WORKDIR /app

RUN apt-get update && apt-get install -y jq

COPY tsconfig.*json .npmrc* .eslint* .prettier* package*.json ./
COPY ./src/microapps-router/package*.json .npmrc* ./src/microapps-router/
COPY ./src/common/microapps-datalib/package*.json .npmrc* ./src/common/microapps-datalib/

RUN mv tsconfig.json tsconfig.orig.json \
  && npx strip-json-comments-cli ./tsconfig.orig.json \
  | jq 'del(.references[] | select(.path != "./src/microapps-router/" and .path != "./src/common/microapps-datalib/"))' > tsconfig.json

FROM base AS prodimages
# Remove the build packages
RUN npm ci --only=production
RUN cd ./src/microapps-router/ && npm ci --only=production


FROM prodimages AS build
# Add the rest of the images needed
RUN npm ci
RUN cd ./src/microapps-router/ && npm ci

COPY ./src/ ./src/

RUN npm run lint
RUN npm run build

# Remove the Dev node modules so they are not copied into the final images
RUN find . -name node_modules -type d -prune -exec rm -rf  {} \;

CMD ["node", "src/microapps-router/dist/index.js"]


FROM public.ecr.aws/lambda/nodejs:12 AS final

# Copy the prod images only
COPY --from=prodimages /app .

# Copy the source and built source
# We want these as two layers (prodimages and built source)
# so that changes to source only push just a new code layer
# and not a new prodimages layer if that didn't change.
COPY --from=build /app .

CMD [ "./src/microapps-router/dist/index.handler" ]


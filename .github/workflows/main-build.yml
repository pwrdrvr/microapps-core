# Based on projen template from src/microapps-cdk/.github/workflows/release.yml
# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".

name: Merge to Main Build

on:
  push:
    branches:
      - main

jobs:
  #
  # CDK Construct
  #
  build-cdk-construct:
    name: Build CDK Construct
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    env:
      CI: "true"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set git identity
        run: |-
          git config user.name "Automation"
          git config user.email "github-actions@github.com"
      
      - name: Fix Install for microapps-publish
        run: |
          chown -R root ./
          chmod -R 777 ./
          npm run fixinstall

      - name: Print NPM Cache Location
        run: npm config get cache

      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-

      - name: Install dependencies
        run: npm ci

      - name: Generate Projen Files
        run: |
          cd packages/microapps-cdk/
          npm run projen

      - name: Build All TypeScript
        run: npm run build --if-present

      - name: Move root NPM modules out of the way
        run: mv node_modules node_modules_hide

      - name: Install CDK Construct Deps
        run: |
          cd packages/microapps-cdk
          npm ci

      - name: Build CDK Construct
        run: |
          cd packages/microapps-cdk
          npm run build

      - name: Check for new commits
        id: git_remote
        run: echo ::set-output name=latest_commit::"$(git ls-remote origin -h ${{
          github.ref }} | cut -f1)"

      - name: Upload CDK Construct Artifact
        if: ${{ steps.git_remote.outputs.latest_commit == github.sha }}
        uses: actions/upload-artifact@v2
        with:
          name: cdk-construct-dist
          path: packages/microapps-cdk/dist
    container:
      image: ghcr.io/pwrdrvr/jsii-node-16

  #
  # Publish Tool
  #
  build-publish-tool:
    name: Build Publish Tool
    needs: build-cdk-construct
    defaults:
      run:
        shell: bash

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Use Node.js 16
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Fix Install for microapps-publish
        run: |
          npm run fixinstall

      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-
      
      - name: Install CDK
        run: npm i -g aws-cdk ts-node projen

      - name: Check for new commits
        id: git_remote
        run: echo ::set-output name=latest_commit::"$(git ls-remote origin -h ${{
          github.ref }} | cut -f1)"

      - name: Install Node Modules
        run: npm ci

      - name: Build All TypeScript
        run: npm run build:publish --if-present

      - name: Run Lint
        run: npm run lint

      - name: Run Node Tests
        run: npm run test

      - name: Upload Publish Tool artifact
        if: ${{ steps.git_remote.outputs.latest_commit == github.sha }}
        uses: actions/upload-artifact@v2
        with:
          name: publish-tool-dist
          path: |
            packages/microapps-publish/
            !packages/microapps-publish/node_modules/

      - name: Upload Datalib artifact
        if: ${{ steps.git_remote.outputs.latest_commit == github.sha }}
        uses: actions/upload-artifact@v2
        with:
          name: datalib-dist
          path: |
            packages/microapps-datalib/
            !packages/microapps-datalib/node_modules/

  #
  # Release Assets
  #
  release-assets:
    name: Release Assets
    needs: [ build-cdk-construct, build-publish-tool ]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    steps:
      - name: Download CDK Construct build artifacts
        uses: actions/download-artifact@v2
        with:
          name: cdk-construct-dist
          path: packages/microapps-cdk/dist

      - name: Download Publish Tool build artifacts
        uses: actions/download-artifact@v2
        with:
          name: publish-tool-dist
          path: packages/microapps-publish

      - name: Download Datalib build artifacts
        uses: actions/download-artifact@v2
        with:
          name: datalib-dist
          path: packages/microapps-datalib

      #
      # Publish other non-JSII Artifacts to NPM
      #
      - name: NPM registry authentication
        run: npm set //registry.npmjs.org/:_authToken ${{ secrets.NPMJSORG_PUBLISH_TOKEN }}

      - name: Release Publish Tool - NPM
        run: |
          cd packages/microapps-publish
          npm publish --dry-run

      - name: Release DataLib - NPM
        run: |
          cd packages/microapps-datalib
          npm publish --dry-run

    container:
      image: ghcr.io/pwrdrvr/jsii-node-16

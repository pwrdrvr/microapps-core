# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

# Workflow syntax reference:
# https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions
name: PR Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Limit concurrency to 1, with queueing, per workflow
# Limit concurrency to 1, with queueing, per workflow per PR
concurrency:
  group: build-${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: false
env:
  # This is used by the SharedProps to detect a PR build
  PR_NUMBER: ${{ github.event.pull_request.number }}
  # Set env to prod so we don't get an env suffix on the DNS names
  NODE_ENV: prod
  DEPLOYER_LAMBDA_NAME: microapps-ghpublic-deployer-prod-pr-${{ github.event.pull_request.number }}
  APP_NAME: demo-app
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID_GHP }}
  AWS_REGION: us-east-2

jobs:
  build:
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js 16
        uses: actions/setup-node@v2
        with:
          node-version: 16
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: Install Node Modules
        run: npm ci

      - name: Build All TypeScript
        run: npm run build --if-present
    
      - name: Run Lint
        run: npm run lint

      - name: Run Node Tests
        run: npm run test
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-session-name: microapps-ghpublic-build
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/builder-writeRole
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy CDK Stack
        run: npx cdk deploy --context @pwrdrvr/microapps:deployDemoApp=true --hotswap --require-approval never microapps-core

      - name: Extract Current NPM Version
        run: |
          echo 'PACKAGE_VERSION_ORIG='$(node -p -e "require('./package.json').version") >> $GITHUB_ENV

      - name: Compute NPM Version
        run: |
          echo 'PACKAGE_VERSION='${PACKAGE_VERSION_ORIG}-pr.${PR_NUMBER} >> $GITHUB_ENV

      - name: Publish Demo App to MicroApps
        run: |
          npx microapps-publish publish -a ${APP_NAME} -n ${PACKAGE_VERSION} -d ${DEPLOYER_LAMBDA_NAME} -l microapps-ghpublic-app-${APP_NAME}-${NODE_ENV}-pr-${PR_NUMBER} -s packages/demo-app/static_files -i index.html --overwrite --noCache

  build-jsii:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js 16
        uses: actions/setup-node@v2
        with:
          node-version: 16
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: Install Node Modules
        run: npm ci

      # Projen keeps creating `packages/microapps-cdk/test/hello.test.ts`
      - name: Generate Projen Files
        working-directory: packages/microapps-cdk/
        run: |
          npx projen --version
          npm run projen
          rm test/hello.test.ts

      - name: Modify microapps-cdk tsconfig.json
        run: |
          mv packages/microapps-cdk/tsconfig.json packages/microapps-cdk/tsconfig.jsii.json
          jq ".compilerOptions += { \"skipLibCheck\": true }" packages/microapps-cdk/tsconfig.jsii.json > packages/microapps-cdk/tsconfig.json

      - name: Build All TypeScript
        run: npm run build --if-present
    
      - name: Move root modules out of the way for CDK Construct build
        run: mv node_modules node_modules_hide
      
      - name: Build CDK Construct
        working-directory: packages/microapps-cdk/
        run: |
          npm ci
          npm run build

      - name: Confirm No Doc Changes
        working-directory: packages/microapps-cdk/
        run: |
          npm run post-compile
          git diff --ignore-space-at-eol --exit-code

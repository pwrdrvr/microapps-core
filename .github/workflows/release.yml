# Based on projen template from src/microapps-cdk/.github/workflows/release.yml
# ~~ Generated by projen. To modify, edit .projenrc.js and run "npx projen".

name: release
on:
  push:
    branches:
      - main
  # Building on pull request is only temporary
  pull_request:
    branches: [ main ]

  workflow_dispatch: {}

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: read
    env:
      CI: "true"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set git identity
        run: |-
          git config user.name "Automation"
          git config user.email "github-actions@github.com"
      
      - name: Make npm ci happy
        run: mkdir -p ./src/microapps-publish/dist/src/ && touch ./src/microapps-publish/dist/src/index.js

      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-node-
            ${{ runner.OS }}-

      - name: Install dependencies
        run: npm ci

      - name: Move modules out of the way
        run: mv node_modules node_modules_hide
      - name: Build CDK Construct
        run: cd src/microapps-cdk && npm ci

      - name: Release
        run: cd src/microapps-cdk && npx projen release

      - name: Check for new commits
        id: git_remote
        run: echo ::set-output name=latest_commit::"$(git ls-remote origin -h ${{
          github.ref }} | cut -f1)"

      - name: Create release
        if: ${{ steps.git_remote.outputs.latest_commit == github.sha }}
        run: cd src/microapps-cdk && gh release create v$(cat dist/version.txt) -F dist/changelog.md -t v$(cat
          dist/version.txt)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


      - name: Upload artifact
        if: ${{ steps.git_remote.outputs.latest_commit == github.sha }}
        uses: actions/upload-artifact@v2.1.1
        with:
          name: dist
          path: src/microapps-cdk/dist
    container:
      image: ghcr.io/pwrdrvr/jsii-node-16

  release_npm:
    name: Release to npm
    needs: release
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: src/microapps-cdk/dist

      # Docs for GitHub Nuget
      # https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-nuget-registry
      # Docs for jsii-release-nuget
      # https://github.com/cdklabs/jsii-release#nuget
      - name: Release NuGet
        run: cd src/microapps-cdk && npx -p jsii-release@latest jsii-release-nuget
        env:
          NUGET_SERVER: https://nuget.pkg.github.com/pwrdrvr/index.json
          NUGET_API_KEY: ${{ secrets.GITHUB_TOKEN }}

      # Docs for GitHub Maven
      # https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-apache-maven-registry
      # Docs for jsii-release-maven
      # https://github.com/cdklabs/jsii-release#maven
      - name: Release Maven
        run: cd src/microapps-cdk && npx -p jsii-release@latest jsii-release-maven
        env:
          MAVEN_SERVER_ID: github
          MAVEN_REPOSITORY_URL: https://maven.pkg.github.com/pwrdrvr/microapps-core
          MAVEN_USERNAME: ${{ github.actor }}
          MAVEN_PASSWORD: ${{ secrets.GITHUB_TOKEN }}

      # Docs for different release steps and params
      # https://www.npmjs.com/package/jsii-release
      # Docs for jsii-release-npm
      # https://github.com/cdklabs/jsii-release#npm
      - name: Release NPM
        run: cd src/microapps-cdk && npx -p jsii-release@latest jsii-release-npm
        env:
          NPM_DIST_TAG: latest
          NPM_REGISTRY: npm.pkg.github.com
          NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    container:
      image: ghcr.io/pwrdrvr/jsii-node-16
